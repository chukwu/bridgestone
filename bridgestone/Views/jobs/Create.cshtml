@using bridgestone.Models
@model bridgestone.Models.job

@{
    ViewBag.Title = "Create";
    MYDBContext db = new MYDBContext();
    Layout = "~/Views/Shared/_Backend.cshtml";

    var result = from m in db.carmakes
                 from mdl in db.carmodels
                 where m.makeID == mdl.makeID
                 select new { m, mdl };

    var services = from s in db.services
                   from ss in db.subservices
                   where s.sid == ss.ssid
                   select new { s, ss };
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>job</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.fullname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.fullname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.fullname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.phone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.make, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select name="make" class="form-control">
                    @foreach (var rsl in result)
                    {
                        <option value="@(rsl.m.make)★@(rsl.mdl.modelname)">@rsl.m.make @(rsl.m.make == rsl.mdl.modelname ? null : rsl.mdl.modelname)</option>
                    }

                </select>
                @Html.ValidationMessageFor(model => model.make, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.regno, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.regno, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.regno, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                <div class='input-group date' id='datetimepicker1'>
                    @Html.EditorFor(model => model.date, new { htmlAttributes = new { @class = "form-control dtpicker" } })
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-calendar"></span>
                    </span>
                </div>

                @Html.ValidationMessageFor(model => model.date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.datelastvisit, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                <div class='input-group date' id='datetimepicker1'>
                    @Html.EditorFor(model => model.datelastvisit, new { htmlAttributes = new { @class = "form-control dtpicker" } })
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-calendar"></span>
                    </span>
                </div>

                @Html.ValidationMessageFor(model => model.datelastvisit, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.milage, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.milage, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.milage, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.service, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select name="service[]" class="form-control" multiple="">
                    @foreach (var rsl in services)
                    {
                        <option value="@(rsl.s.servicename)★@(rsl.ss.servicename)">@rsl.s.servicename ( @(rsl.s.servicename == rsl.ss.servicename ? null : rsl.ss.servicename) )</option>
                    }

                </select>
                @Html.ValidationMessageFor(model => model.service, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.details, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.details, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.details, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
